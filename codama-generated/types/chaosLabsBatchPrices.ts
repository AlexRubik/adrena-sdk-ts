/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getArrayDecoder,
  getArrayEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';
import {
  getPriceDataDecoder,
  getPriceDataEncoder,
  type PriceData,
  type PriceDataArgs,
} from '.';

export type ChaosLabsBatchPrices = {
  prices: Array<PriceData>;
  signature: ReadonlyUint8Array;
  recoveryId: number;
};

export type ChaosLabsBatchPricesArgs = {
  prices: Array<PriceDataArgs>;
  signature: ReadonlyUint8Array;
  recoveryId: number;
};

export function getChaosLabsBatchPricesEncoder(): Encoder<ChaosLabsBatchPricesArgs> {
  return getStructEncoder([
    ['prices', getArrayEncoder(getPriceDataEncoder())],
    ['signature', fixEncoderSize(getBytesEncoder(), 64)],
    ['recoveryId', getU8Encoder()],
  ]);
}

export function getChaosLabsBatchPricesDecoder(): Decoder<ChaosLabsBatchPrices> {
  return getStructDecoder([
    ['prices', getArrayDecoder(getPriceDataDecoder())],
    ['signature', fixDecoderSize(getBytesDecoder(), 64)],
    ['recoveryId', getU8Decoder()],
  ]);
}

export function getChaosLabsBatchPricesCodec(): Codec<
  ChaosLabsBatchPricesArgs,
  ChaosLabsBatchPrices
> {
  return combineCodec(
    getChaosLabsBatchPricesEncoder(),
    getChaosLabsBatchPricesDecoder()
  );
}
