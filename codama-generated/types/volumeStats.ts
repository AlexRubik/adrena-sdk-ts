/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export type VolumeStats = {
  swapUsd: bigint;
  addLiquidityUsd: bigint;
  removeLiquidityUsd: bigint;
  openPositionUsd: bigint;
  closePositionUsd: bigint;
  liquidationUsd: bigint;
};

export type VolumeStatsArgs = {
  swapUsd: number | bigint;
  addLiquidityUsd: number | bigint;
  removeLiquidityUsd: number | bigint;
  openPositionUsd: number | bigint;
  closePositionUsd: number | bigint;
  liquidationUsd: number | bigint;
};

export function getVolumeStatsEncoder(): Encoder<VolumeStatsArgs> {
  return getStructEncoder([
    ['swapUsd', getU64Encoder()],
    ['addLiquidityUsd', getU64Encoder()],
    ['removeLiquidityUsd', getU64Encoder()],
    ['openPositionUsd', getU64Encoder()],
    ['closePositionUsd', getU64Encoder()],
    ['liquidationUsd', getU64Encoder()],
  ]);
}

export function getVolumeStatsDecoder(): Decoder<VolumeStats> {
  return getStructDecoder([
    ['swapUsd', getU64Decoder()],
    ['addLiquidityUsd', getU64Decoder()],
    ['removeLiquidityUsd', getU64Decoder()],
    ['openPositionUsd', getU64Decoder()],
    ['closePositionUsd', getU64Decoder()],
    ['liquidationUsd', getU64Decoder()],
  ]);
}

export function getVolumeStatsCodec(): Codec<VolumeStatsArgs, VolumeStats> {
  return combineCodec(getVolumeStatsEncoder(), getVolumeStatsDecoder());
}
