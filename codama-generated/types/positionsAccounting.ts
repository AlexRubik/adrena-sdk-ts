/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getStableLockedAmountStatDecoder,
  getStableLockedAmountStatEncoder,
  getU128SplitDecoder,
  getU128SplitEncoder,
  type StableLockedAmountStat,
  type StableLockedAmountStatArgs,
  type U128Split,
  type U128SplitArgs,
} from '.';

export type PositionsAccounting = {
  openPositions: bigint;
  sizeUsd: bigint;
  borrowSizeUsd: bigint;
  lockedAmount: bigint;
  weightedPrice: U128Split;
  totalQuantity: U128Split;
  cumulativeInterestUsd: bigint;
  collateralUsd: bigint;
  cumulativeInterestSnapshot: U128Split;
  exitFeeUsd: bigint;
  stableLockedAmount: Array<StableLockedAmountStat>;
};

export type PositionsAccountingArgs = {
  openPositions: number | bigint;
  sizeUsd: number | bigint;
  borrowSizeUsd: number | bigint;
  lockedAmount: number | bigint;
  weightedPrice: U128SplitArgs;
  totalQuantity: U128SplitArgs;
  cumulativeInterestUsd: number | bigint;
  collateralUsd: number | bigint;
  cumulativeInterestSnapshot: U128SplitArgs;
  exitFeeUsd: number | bigint;
  stableLockedAmount: Array<StableLockedAmountStatArgs>;
};

export function getPositionsAccountingEncoder(): Encoder<PositionsAccountingArgs> {
  return getStructEncoder([
    ['openPositions', getU64Encoder()],
    ['sizeUsd', getU64Encoder()],
    ['borrowSizeUsd', getU64Encoder()],
    ['lockedAmount', getU64Encoder()],
    ['weightedPrice', getU128SplitEncoder()],
    ['totalQuantity', getU128SplitEncoder()],
    ['cumulativeInterestUsd', getU64Encoder()],
    ['collateralUsd', getU64Encoder()],
    ['cumulativeInterestSnapshot', getU128SplitEncoder()],
    ['exitFeeUsd', getU64Encoder()],
    [
      'stableLockedAmount',
      getArrayEncoder(getStableLockedAmountStatEncoder(), { size: 2 }),
    ],
  ]);
}

export function getPositionsAccountingDecoder(): Decoder<PositionsAccounting> {
  return getStructDecoder([
    ['openPositions', getU64Decoder()],
    ['sizeUsd', getU64Decoder()],
    ['borrowSizeUsd', getU64Decoder()],
    ['lockedAmount', getU64Decoder()],
    ['weightedPrice', getU128SplitDecoder()],
    ['totalQuantity', getU128SplitDecoder()],
    ['cumulativeInterestUsd', getU64Decoder()],
    ['collateralUsd', getU64Decoder()],
    ['cumulativeInterestSnapshot', getU128SplitDecoder()],
    ['exitFeeUsd', getU64Decoder()],
    [
      'stableLockedAmount',
      getArrayDecoder(getStableLockedAmountStatDecoder(), { size: 2 }),
    ],
  ]);
}

export function getPositionsAccountingCodec(): Codec<
  PositionsAccountingArgs,
  PositionsAccounting
> {
  return combineCodec(
    getPositionsAccountingEncoder(),
    getPositionsAccountingDecoder()
  );
}
