/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';

export type StakingRound = {
  startTime: bigint;
  endTime: bigint;
  rate: bigint;
  totalStake: bigint;
  totalClaim: bigint;
  lmRate: bigint;
  lmTotalStake: bigint;
  lmTotalClaim: bigint;
};

export type StakingRoundArgs = {
  startTime: number | bigint;
  endTime: number | bigint;
  rate: number | bigint;
  totalStake: number | bigint;
  totalClaim: number | bigint;
  lmRate: number | bigint;
  lmTotalStake: number | bigint;
  lmTotalClaim: number | bigint;
};

export function getStakingRoundEncoder(): Encoder<StakingRoundArgs> {
  return getStructEncoder([
    ['startTime', getI64Encoder()],
    ['endTime', getI64Encoder()],
    ['rate', getU64Encoder()],
    ['totalStake', getU64Encoder()],
    ['totalClaim', getU64Encoder()],
    ['lmRate', getU64Encoder()],
    ['lmTotalStake', getU64Encoder()],
    ['lmTotalClaim', getU64Encoder()],
  ]);
}

export function getStakingRoundDecoder(): Decoder<StakingRound> {
  return getStructDecoder([
    ['startTime', getI64Decoder()],
    ['endTime', getI64Decoder()],
    ['rate', getU64Decoder()],
    ['totalStake', getU64Decoder()],
    ['totalClaim', getU64Decoder()],
    ['lmRate', getU64Decoder()],
    ['lmTotalStake', getU64Decoder()],
    ['lmTotalClaim', getU64Decoder()],
  ]);
}

export function getStakingRoundCodec(): Codec<StakingRoundArgs, StakingRound> {
  return combineCodec(getStakingRoundEncoder(), getStakingRoundDecoder());
}
