/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type TokenRatios = {
  target: number;
  min: number;
  max: number;
  padding: ReadonlyUint8Array;
};

export type TokenRatiosArgs = TokenRatios;

export function getTokenRatiosEncoder(): Encoder<TokenRatiosArgs> {
  return getStructEncoder([
    ['target', getU16Encoder()],
    ['min', getU16Encoder()],
    ['max', getU16Encoder()],
    ['padding', fixEncoderSize(getBytesEncoder(), 2)],
  ]);
}

export function getTokenRatiosDecoder(): Decoder<TokenRatios> {
  return getStructDecoder([
    ['target', getU16Decoder()],
    ['min', getU16Decoder()],
    ['max', getU16Decoder()],
    ['padding', fixDecoderSize(getBytesDecoder(), 2)],
  ]);
}

export function getTokenRatiosCodec(): Codec<TokenRatiosArgs, TokenRatios> {
  return combineCodec(getTokenRatiosEncoder(), getTokenRatiosDecoder());
}
