/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from '@solana/kit';
import {
  getCustodyInfoSnapshotDecoder,
  getCustodyInfoSnapshotEncoder,
  type CustodyInfoSnapshot,
  type CustodyInfoSnapshotArgs,
} from '.';

export type PoolInfoSnapshot = {
  currentTime: bigint;
  aumUsd: bigint;
  lpTokenPrice: bigint;
  custodiesInfoSnapshot: Array<CustodyInfoSnapshot>;
  lpCirculatingSupply: bigint;
  cumulativeReferrerFeeUsd: bigint;
};

export type PoolInfoSnapshotArgs = {
  currentTime: number | bigint;
  aumUsd: number | bigint;
  lpTokenPrice: number | bigint;
  custodiesInfoSnapshot: Array<CustodyInfoSnapshotArgs>;
  lpCirculatingSupply: number | bigint;
  cumulativeReferrerFeeUsd: number | bigint;
};

export function getPoolInfoSnapshotEncoder(): Encoder<PoolInfoSnapshotArgs> {
  return getStructEncoder([
    ['currentTime', getU64Encoder()],
    ['aumUsd', getU64Encoder()],
    ['lpTokenPrice', getU64Encoder()],
    ['custodiesInfoSnapshot', getArrayEncoder(getCustodyInfoSnapshotEncoder())],
    ['lpCirculatingSupply', getU64Encoder()],
    ['cumulativeReferrerFeeUsd', getU64Encoder()],
  ]);
}

export function getPoolInfoSnapshotDecoder(): Decoder<PoolInfoSnapshot> {
  return getStructDecoder([
    ['currentTime', getU64Decoder()],
    ['aumUsd', getU64Decoder()],
    ['lpTokenPrice', getU64Decoder()],
    ['custodiesInfoSnapshot', getArrayDecoder(getCustodyInfoSnapshotDecoder())],
    ['lpCirculatingSupply', getU64Decoder()],
    ['cumulativeReferrerFeeUsd', getU64Decoder()],
  ]);
}

export function getPoolInfoSnapshotCodec(): Codec<
  PoolInfoSnapshotArgs,
  PoolInfoSnapshot
> {
  return combineCodec(
    getPoolInfoSnapshotEncoder(),
    getPoolInfoSnapshotDecoder()
  );
}
