/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getUnitDecoder,
  getUnitEncoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';

export type ReservedSpots =
  | { __kind: 'None' }
  | { __kind: 'Test'; firstReservedSpot: Address; secondReservedSpot: Address };

export type ReservedSpotsArgs = ReservedSpots;

export function getReservedSpotsEncoder(): Encoder<ReservedSpotsArgs> {
  return getDiscriminatedUnionEncoder([
    ['None', getUnitEncoder()],
    [
      'Test',
      getStructEncoder([
        ['firstReservedSpot', getAddressEncoder()],
        ['secondReservedSpot', getAddressEncoder()],
      ]),
    ],
  ]);
}

export function getReservedSpotsDecoder(): Decoder<ReservedSpots> {
  return getDiscriminatedUnionDecoder([
    ['None', getUnitDecoder()],
    [
      'Test',
      getStructDecoder([
        ['firstReservedSpot', getAddressDecoder()],
        ['secondReservedSpot', getAddressDecoder()],
      ]),
    ],
  ]);
}

export function getReservedSpotsCodec(): Codec<
  ReservedSpotsArgs,
  ReservedSpots
> {
  return combineCodec(getReservedSpotsEncoder(), getReservedSpotsDecoder());
}

// Data Enum Helpers.
export function reservedSpots(
  kind: 'None'
): GetDiscriminatedUnionVariant<ReservedSpotsArgs, '__kind', 'None'>;
export function reservedSpots(
  kind: 'Test',
  data: GetDiscriminatedUnionVariantContent<ReservedSpotsArgs, '__kind', 'Test'>
): GetDiscriminatedUnionVariant<ReservedSpotsArgs, '__kind', 'Test'>;
export function reservedSpots<K extends ReservedSpotsArgs['__kind'], Data>(
  kind: K,
  data?: Data
) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isReservedSpots<K extends ReservedSpots['__kind']>(
  kind: K,
  value: ReservedSpots
): value is ReservedSpots & { __kind: K } {
  return value.__kind === kind;
}
