/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type Fees = {
  swapIn: number;
  swapOut: number;
  stableSwapIn: number;
  stableSwapOut: number;
  addLiquidity: number;
  removeLiquidity: number;
  closePosition: number;
  liquidation: number;
  feeMax: number;
  padding: ReadonlyUint8Array;
  padding2: bigint;
};

export type FeesArgs = {
  swapIn: number;
  swapOut: number;
  stableSwapIn: number;
  stableSwapOut: number;
  addLiquidity: number;
  removeLiquidity: number;
  closePosition: number;
  liquidation: number;
  feeMax: number;
  padding: ReadonlyUint8Array;
  padding2: number | bigint;
};

export function getFeesEncoder(): Encoder<FeesArgs> {
  return getStructEncoder([
    ['swapIn', getU16Encoder()],
    ['swapOut', getU16Encoder()],
    ['stableSwapIn', getU16Encoder()],
    ['stableSwapOut', getU16Encoder()],
    ['addLiquidity', getU16Encoder()],
    ['removeLiquidity', getU16Encoder()],
    ['closePosition', getU16Encoder()],
    ['liquidation', getU16Encoder()],
    ['feeMax', getU16Encoder()],
    ['padding', fixEncoderSize(getBytesEncoder(), 6)],
    ['padding2', getU64Encoder()],
  ]);
}

export function getFeesDecoder(): Decoder<Fees> {
  return getStructDecoder([
    ['swapIn', getU16Decoder()],
    ['swapOut', getU16Decoder()],
    ['stableSwapIn', getU16Decoder()],
    ['stableSwapOut', getU16Decoder()],
    ['addLiquidity', getU16Decoder()],
    ['removeLiquidity', getU16Decoder()],
    ['closePosition', getU16Decoder()],
    ['liquidation', getU16Decoder()],
    ['feeMax', getU16Decoder()],
    ['padding', fixDecoderSize(getBytesDecoder(), 6)],
    ['padding2', getU64Decoder()],
  ]);
}

export function getFeesCodec(): Codec<FeesArgs, Fees> {
  return combineCodec(getFeesEncoder(), getFeesDecoder());
}
