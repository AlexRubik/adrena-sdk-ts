/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getAddressDecoder,
  getAddressEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type LimitOrder = {
  id: bigint;
  triggerPrice: bigint;
  limitPrice: bigint;
  custody: Address;
  collateralCustody: Address;
  side: number;
  initialized: number;
  isLimitPriceSet: number;
  padding: ReadonlyUint8Array;
  amount: bigint;
  leverage: number;
  padding2: ReadonlyUint8Array;
};

export type LimitOrderArgs = {
  id: number | bigint;
  triggerPrice: number | bigint;
  limitPrice: number | bigint;
  custody: Address;
  collateralCustody: Address;
  side: number;
  initialized: number;
  isLimitPriceSet: number;
  padding: ReadonlyUint8Array;
  amount: number | bigint;
  leverage: number;
  padding2: ReadonlyUint8Array;
};

export function getLimitOrderEncoder(): Encoder<LimitOrderArgs> {
  return getStructEncoder([
    ['id', getU64Encoder()],
    ['triggerPrice', getU64Encoder()],
    ['limitPrice', getU64Encoder()],
    ['custody', getAddressEncoder()],
    ['collateralCustody', getAddressEncoder()],
    ['side', getU8Encoder()],
    ['initialized', getU8Encoder()],
    ['isLimitPriceSet', getU8Encoder()],
    ['padding', fixEncoderSize(getBytesEncoder(), 5)],
    ['amount', getU64Encoder()],
    ['leverage', getU32Encoder()],
    ['padding2', fixEncoderSize(getBytesEncoder(), 4)],
  ]);
}

export function getLimitOrderDecoder(): Decoder<LimitOrder> {
  return getStructDecoder([
    ['id', getU64Decoder()],
    ['triggerPrice', getU64Decoder()],
    ['limitPrice', getU64Decoder()],
    ['custody', getAddressDecoder()],
    ['collateralCustody', getAddressDecoder()],
    ['side', getU8Decoder()],
    ['initialized', getU8Decoder()],
    ['isLimitPriceSet', getU8Decoder()],
    ['padding', fixDecoderSize(getBytesDecoder(), 5)],
    ['amount', getU64Decoder()],
    ['leverage', getU32Decoder()],
    ['padding2', fixDecoderSize(getBytesDecoder(), 4)],
  ]);
}

export function getLimitOrderCodec(): Codec<LimitOrderArgs, LimitOrder> {
  return combineCodec(getLimitOrderEncoder(), getLimitOrderDecoder());
}
