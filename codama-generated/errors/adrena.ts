/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from '@solana/kit';
import { ADRENA_PROGRAM_ADDRESS } from '../programs';

/** MathOverflow: Overflow in arithmetic operation */
export const ADRENA_ERROR__MATH_OVERFLOW = 0x1770; // 6000
/** UnsupportedOracle: Unsupported price oracle */
export const ADRENA_ERROR__UNSUPPORTED_ORACLE = 0x1771; // 6001
/** InvalidOracleAccount: Invalid oracle account */
export const ADRENA_ERROR__INVALID_ORACLE_ACCOUNT = 0x1772; // 6002
/** InvalidOracleState: Invalid oracle state */
export const ADRENA_ERROR__INVALID_ORACLE_STATE = 0x1773; // 6003
/** StaleOraclePrice: Stale oracle price */
export const ADRENA_ERROR__STALE_ORACLE_PRICE = 0x1774; // 6004
/** InvalidOraclePrice: Invalid oracle price */
export const ADRENA_ERROR__INVALID_ORACLE_PRICE = 0x1775; // 6005
/** InvalidEnvironment: Instruction is not allowed in production */
export const ADRENA_ERROR__INVALID_ENVIRONMENT = 0x1776; // 6006
/** InvalidPoolLiquidityState: Invalid pool liquidity state */
export const ADRENA_ERROR__INVALID_POOL_LIQUIDITY_STATE = 0x1777; // 6007
/** InvalidCortexState: Invalid cortex state */
export const ADRENA_ERROR__INVALID_CORTEX_STATE = 0x1778; // 6008
/** InvalidStakingState: Invalid staking state */
export const ADRENA_ERROR__INVALID_STAKING_STATE = 0x1779; // 6009
/** InvalidPoolState: Invalid pool state */
export const ADRENA_ERROR__INVALID_POOL_STATE = 0x177a; // 6010
/** InvalidVestState: Invalid vest state */
export const ADRENA_ERROR__INVALID_VEST_STATE = 0x177b; // 6011
/** InvalidStakeState: Invalid stake state */
export const ADRENA_ERROR__INVALID_STAKE_STATE = 0x177c; // 6012
/** InvalidCustody: Invalid custody */
export const ADRENA_ERROR__INVALID_CUSTODY = 0x177d; // 6013
/** InvalidCustodyAccount: Invalid custody account */
export const ADRENA_ERROR__INVALID_CUSTODY_ACCOUNT = 0x177e; // 6014
/** InvalidCustodyState: Invalid custody state */
export const ADRENA_ERROR__INVALID_CUSTODY_STATE = 0x177f; // 6015
/** InvalidCollateralCustody: Invalid collateral custody */
export const ADRENA_ERROR__INVALID_COLLATERAL_CUSTODY = 0x1780; // 6016
/** InvalidPositionState: Invalid position state */
export const ADRENA_ERROR__INVALID_POSITION_STATE = 0x1781; // 6017
/** PositionNotInLiquidationRange: The position is not in liquidation range */
export const ADRENA_ERROR__POSITION_NOT_IN_LIQUIDATION_RANGE = 0x1782; // 6018
/** InvalidStakingRoundState: Invalid staking round state */
export const ADRENA_ERROR__INVALID_STAKING_ROUND_STATE = 0x1783; // 6019
/** InvalidAdrenaConfig: Invalid adrena config */
export const ADRENA_ERROR__INVALID_ADRENA_CONFIG = 0x1784; // 6020
/** InvalidPoolConfig: Invalid pool config */
export const ADRENA_ERROR__INVALID_POOL_CONFIG = 0x1785; // 6021
/** InvalidCustodyConfig: Invalid custody config */
export const ADRENA_ERROR__INVALID_CUSTODY_CONFIG = 0x1786; // 6022
/** InsufficientAmountReturned: Insufficient token amount returned */
export const ADRENA_ERROR__INSUFFICIENT_AMOUNT_RETURNED = 0x1787; // 6023
/** MaxPriceSlippage: Price slippage limit exceeded */
export const ADRENA_ERROR__MAX_PRICE_SLIPPAGE = 0x1788; // 6024
/** MaxLeverage: Position leverage limit exceeded */
export const ADRENA_ERROR__MAX_LEVERAGE = 0x1789; // 6025
/** MinLeverage: Position leverage under minimum */
export const ADRENA_ERROR__MIN_LEVERAGE = 0x178a; // 6026
/** CustodyAmountLimit: Custody amount limit exceeded */
export const ADRENA_ERROR__CUSTODY_AMOUNT_LIMIT = 0x178b; // 6027
/** PositionAmountLimit: Position amount limit exceeded */
export const ADRENA_ERROR__POSITION_AMOUNT_LIMIT = 0x178c; // 6028
/** TokenRatioOutOfRange: Token ratio out of range */
export const ADRENA_ERROR__TOKEN_RATIO_OUT_OF_RANGE = 0x178d; // 6029
/** UnsupportedToken: Token is not supported */
export const ADRENA_ERROR__UNSUPPORTED_TOKEN = 0x178e; // 6030
/** InstructionNotAllowed: Instruction is not allowed at this time */
export const ADRENA_ERROR__INSTRUCTION_NOT_ALLOWED = 0x178f; // 6031
/** MaxUtilization: Token utilization limit exceeded */
export const ADRENA_ERROR__MAX_UTILIZATION = 0x1790; // 6032
/** MaxRegisteredResolvedStakingRoundReached: Max registered resolved staking round reached */
export const ADRENA_ERROR__MAX_REGISTERED_RESOLVED_STAKING_ROUND_REACHED = 0x1791; // 6033
/** InvalidGovernanceProgram: Governance program do not match Cortex's one */
export const ADRENA_ERROR__INVALID_GOVERNANCE_PROGRAM = 0x1792; // 6034
/** InvalidGovernanceRealm: Governance realm do not match Cortex's one */
export const ADRENA_ERROR__INVALID_GOVERNANCE_REALM = 0x1793; // 6035
/** InvalidVestingUnlockTime: Vesting unlock time is too close or passed */
export const ADRENA_ERROR__INVALID_VESTING_UNLOCK_TIME = 0x1794; // 6036
/** InvalidStakingLockingTime: Invalid staking locking time */
export const ADRENA_ERROR__INVALID_STAKING_LOCKING_TIME = 0x1795; // 6037
/** UserStakeNotFound: The user stake account specified could not be found */
export const ADRENA_ERROR__USER_STAKE_NOT_FOUND = 0x1796; // 6038
/** InvalidAccountData: Invalid account data */
export const ADRENA_ERROR__INVALID_ACCOUNT_DATA = 0x1797; // 6039
/** UnresolvedStake: Stake is not resolved */
export const ADRENA_ERROR__UNRESOLVED_STAKE = 0x1798; // 6040
/** BucketMintLimit: Reached bucket mint limit */
export const ADRENA_ERROR__BUCKET_MINT_LIMIT = 0x1799; // 6041
/** GenesisAlpLimitReached: Genesis ALP add liquidity limit reached */
export const ADRENA_ERROR__GENESIS_ALP_LIMIT_REACHED = 0x179a; // 6042
/** PermissionlessOracleMissingSignature: Permissionless oracle update must be preceded by Ed25519 signature verification instruction */
export const ADRENA_ERROR__PERMISSIONLESS_ORACLE_MISSING_SIGNATURE = 0x179b; // 6043
/** PermissionlessOracleMalformedEd25519Data: Ed25519 signature verification data does not match expected format */
export const ADRENA_ERROR__PERMISSIONLESS_ORACLE_MALFORMED_ED25519_DATA = 0x179c; // 6044
/** PermissionlessOracleSignerMismatch: Ed25519 signature was not signed by the oracle authority */
export const ADRENA_ERROR__PERMISSIONLESS_ORACLE_SIGNER_MISMATCH = 0x179d; // 6045
/** PermissionlessOracleMessageMismatch: Signed message does not match instruction params */
export const ADRENA_ERROR__PERMISSIONLESS_ORACLE_MESSAGE_MISMATCH = 0x179e; // 6046
/** CustodyStableLockedAmountNotFound: Cannot find custody stable locked amount */
export const ADRENA_ERROR__CUSTODY_STABLE_LOCKED_AMOUNT_NOT_FOUND = 0x179f; // 6047
/** CustodyNotFound: Cannot find custody */
export const ADRENA_ERROR__CUSTODY_NOT_FOUND = 0x17a0; // 6048
/** InsufficientBucketReserve: The bucket does not contain enough token for reserving this allocation */
export const ADRENA_ERROR__INSUFFICIENT_BUCKET_RESERVE = 0x17a1; // 6049
/** UserNicknameTooLong: User nickname exceed 24 characters */
export const ADRENA_ERROR__USER_NICKNAME_TOO_LONG = 0x17a2; // 6050
/** UserNicknameTooShort: User nickname is less than 3 characters */
export const ADRENA_ERROR__USER_NICKNAME_TOO_SHORT = 0x17a3; // 6051
/** InvalidGenesisLockState: Invalid genesis lock state */
export const ADRENA_ERROR__INVALID_GENESIS_LOCK_STATE = 0x17a4; // 6052
/** GenesisLockCampaignFullySubscribed: The campaign is fully subscribed */
export const ADRENA_ERROR__GENESIS_LOCK_CAMPAIGN_FULLY_SUBSCRIBED = 0x17a5; // 6053
/** PoolAumSoftCapUsdReached: The pool is fully subscribed */
export const ADRENA_ERROR__POOL_AUM_SOFT_CAP_USD_REACHED = 0x17a6; // 6054
/** MaxRegisteredPool: The number of registered pool reached max amount */
export const ADRENA_ERROR__MAX_REGISTERED_POOL = 0x17a7; // 6055
/** MaxRegisteredCustodies: The number of registered custody reached max amount */
export const ADRENA_ERROR__MAX_REGISTERED_CUSTODIES = 0x17a8; // 6056
/** MaxCumulativeShortPositionSizeLimit: The short limit for this asset has been reached */
export const ADRENA_ERROR__MAX_CUMULATIVE_SHORT_POSITION_SIZE_LIMIT = 0x17a9; // 6057
/** LockedStakeArrayFull: The max number of LockedStaking has been reached */
export const ADRENA_ERROR__LOCKED_STAKE_ARRAY_FULL = 0x17aa; // 6058
/** IndexOutOfBounds: Requested index is out of bounds */
export const ADRENA_ERROR__INDEX_OUT_OF_BOUNDS = 0x17ab; // 6059
/** InvalidCaller: The instruction must be call with a specific account as caller */
export const ADRENA_ERROR__INVALID_CALLER = 0x17ac; // 6060
/** InvalidBucketName: Invalid bucket name */
export const ADRENA_ERROR__INVALID_BUCKET_NAME = 0x17ad; // 6061
/** InvalidThreadId: (deprecated)The provided Sablier thread does not have the expected ID */
export const ADRENA_ERROR__INVALID_THREAD_ID = 0x17ae; // 6062
/** PythPriceExponentTooLargeIncurringPrecisionLoss: The exponent used for pyth price lead to high precision loss */
export const ADRENA_ERROR__PYTH_PRICE_EXPONENT_TOO_LARGE_INCURRING_PRECISION_LOSS = 0x17af; // 6063
/** MissingClosePositionPrice: The close position price is mandatory */
export const ADRENA_ERROR__MISSING_CLOSE_POSITION_PRICE = 0x17b0; // 6064
/** InvalidVoteMultiplier: Invalid vote multiplier */
export const ADRENA_ERROR__INVALID_VOTE_MULTIPLIER = 0x17b1; // 6065
/** PositionTooYoung: A position cannot be close right after open, a slight delay is enforced */
export const ADRENA_ERROR__POSITION_TOO_YOUNG = 0x17b2; // 6066
/** InsufficientCollateral: The minimum amount of collateral posted to open a position is not met */
export const ADRENA_ERROR__INSUFFICIENT_COLLATERAL = 0x17b3; // 6067
/** InvalidLockDuration: The provided lock duration isn't valid */
export const ADRENA_ERROR__INVALID_LOCK_DURATION = 0x17b4; // 6068
/** StakeNotEstablished: The stake isn't established yet */
export const ADRENA_ERROR__STAKE_NOT_ESTABLISHED = 0x17b5; // 6069
/** PositionAlreadyClosed: The position is already pending cleanup and close */
export const ADRENA_ERROR__POSITION_ALREADY_CLOSED = 0x17b6; // 6070
/** InvalidLimitOrderState: Invalid limit order state */
export const ADRENA_ERROR__INVALID_LIMIT_ORDER_STATE = 0x17b7; // 6071
/** InvalidWallpaperOrProfilePictureOrTitle: Wallpaper or Profile Picture or Title is invalid */
export const ADRENA_ERROR__INVALID_WALLPAPER_OR_PROFILE_PICTURE_OR_TITLE = 0x17b8; // 6072
/** InvalidVersion: Invalid version */
export const ADRENA_ERROR__INVALID_VERSION = 0x17b9; // 6073
/** InvalidVestVersion: Invalid vest version */
export const ADRENA_ERROR__INVALID_VEST_VERSION = 0x17ba; // 6074
/** MissingOrInvalidReferrerAccount: Missing or invalid referrer account */
export const ADRENA_ERROR__MISSING_OR_INVALID_REFERRER_ACCOUNT = 0x17bb; // 6075
/** WallpaperNotUnlocked: The requested wallpaper has not been unlocked by this user */
export const ADRENA_ERROR__WALLPAPER_NOT_UNLOCKED = 0x17bc; // 6076
/** ProfilePictureNotUnlocked: The requested profile picture has not been unlocked by this user */
export const ADRENA_ERROR__PROFILE_PICTURE_NOT_UNLOCKED = 0x17bd; // 6077
/** TitleNotUnlocked: The requested title has not been unlocked by this user */
export const ADRENA_ERROR__TITLE_NOT_UNLOCKED = 0x17be; // 6078
/** InvalidAchievement: Invalid achievement ID */
export const ADRENA_ERROR__INVALID_ACHIEVEMENT = 0x17bf; // 6079
/** UserNicknameInvalidFormat: User nickname expected format: Monster followed by digits */
export const ADRENA_ERROR__USER_NICKNAME_INVALID_FORMAT = 0x17c0; // 6080
/** InvalidContinentOrTeam: Continent or Team is invalid */
export const ADRENA_ERROR__INVALID_CONTINENT_OR_TEAM = 0x17c1; // 6081
/** TeamImmutable: The team can not be changed after being already set */
export const ADRENA_ERROR__TEAM_IMMUTABLE = 0x17c2; // 6082
/** InvalidSigner: Invalid signer */
export const ADRENA_ERROR__INVALID_SIGNER = 0x17c3; // 6083
/** MissingOraclePrice: Missing at least one oracle price */
export const ADRENA_ERROR__MISSING_ORACLE_PRICE = 0x17c4; // 6084
/** InvalidOracleSignature: Invalid oracle signature */
export const ADRENA_ERROR__INVALID_ORACLE_SIGNATURE = 0x17c5; // 6085

export type AdrenaError =
  | typeof ADRENA_ERROR__BUCKET_MINT_LIMIT
  | typeof ADRENA_ERROR__CUSTODY_AMOUNT_LIMIT
  | typeof ADRENA_ERROR__CUSTODY_NOT_FOUND
  | typeof ADRENA_ERROR__CUSTODY_STABLE_LOCKED_AMOUNT_NOT_FOUND
  | typeof ADRENA_ERROR__GENESIS_ALP_LIMIT_REACHED
  | typeof ADRENA_ERROR__GENESIS_LOCK_CAMPAIGN_FULLY_SUBSCRIBED
  | typeof ADRENA_ERROR__INDEX_OUT_OF_BOUNDS
  | typeof ADRENA_ERROR__INSTRUCTION_NOT_ALLOWED
  | typeof ADRENA_ERROR__INSUFFICIENT_AMOUNT_RETURNED
  | typeof ADRENA_ERROR__INSUFFICIENT_BUCKET_RESERVE
  | typeof ADRENA_ERROR__INSUFFICIENT_COLLATERAL
  | typeof ADRENA_ERROR__INVALID_ACCOUNT_DATA
  | typeof ADRENA_ERROR__INVALID_ACHIEVEMENT
  | typeof ADRENA_ERROR__INVALID_ADRENA_CONFIG
  | typeof ADRENA_ERROR__INVALID_BUCKET_NAME
  | typeof ADRENA_ERROR__INVALID_CALLER
  | typeof ADRENA_ERROR__INVALID_COLLATERAL_CUSTODY
  | typeof ADRENA_ERROR__INVALID_CONTINENT_OR_TEAM
  | typeof ADRENA_ERROR__INVALID_CORTEX_STATE
  | typeof ADRENA_ERROR__INVALID_CUSTODY
  | typeof ADRENA_ERROR__INVALID_CUSTODY_ACCOUNT
  | typeof ADRENA_ERROR__INVALID_CUSTODY_CONFIG
  | typeof ADRENA_ERROR__INVALID_CUSTODY_STATE
  | typeof ADRENA_ERROR__INVALID_ENVIRONMENT
  | typeof ADRENA_ERROR__INVALID_GENESIS_LOCK_STATE
  | typeof ADRENA_ERROR__INVALID_GOVERNANCE_PROGRAM
  | typeof ADRENA_ERROR__INVALID_GOVERNANCE_REALM
  | typeof ADRENA_ERROR__INVALID_LIMIT_ORDER_STATE
  | typeof ADRENA_ERROR__INVALID_LOCK_DURATION
  | typeof ADRENA_ERROR__INVALID_ORACLE_ACCOUNT
  | typeof ADRENA_ERROR__INVALID_ORACLE_PRICE
  | typeof ADRENA_ERROR__INVALID_ORACLE_SIGNATURE
  | typeof ADRENA_ERROR__INVALID_ORACLE_STATE
  | typeof ADRENA_ERROR__INVALID_POOL_CONFIG
  | typeof ADRENA_ERROR__INVALID_POOL_LIQUIDITY_STATE
  | typeof ADRENA_ERROR__INVALID_POOL_STATE
  | typeof ADRENA_ERROR__INVALID_POSITION_STATE
  | typeof ADRENA_ERROR__INVALID_SIGNER
  | typeof ADRENA_ERROR__INVALID_STAKE_STATE
  | typeof ADRENA_ERROR__INVALID_STAKING_LOCKING_TIME
  | typeof ADRENA_ERROR__INVALID_STAKING_ROUND_STATE
  | typeof ADRENA_ERROR__INVALID_STAKING_STATE
  | typeof ADRENA_ERROR__INVALID_THREAD_ID
  | typeof ADRENA_ERROR__INVALID_VERSION
  | typeof ADRENA_ERROR__INVALID_VESTING_UNLOCK_TIME
  | typeof ADRENA_ERROR__INVALID_VEST_STATE
  | typeof ADRENA_ERROR__INVALID_VEST_VERSION
  | typeof ADRENA_ERROR__INVALID_VOTE_MULTIPLIER
  | typeof ADRENA_ERROR__INVALID_WALLPAPER_OR_PROFILE_PICTURE_OR_TITLE
  | typeof ADRENA_ERROR__LOCKED_STAKE_ARRAY_FULL
  | typeof ADRENA_ERROR__MATH_OVERFLOW
  | typeof ADRENA_ERROR__MAX_CUMULATIVE_SHORT_POSITION_SIZE_LIMIT
  | typeof ADRENA_ERROR__MAX_LEVERAGE
  | typeof ADRENA_ERROR__MAX_PRICE_SLIPPAGE
  | typeof ADRENA_ERROR__MAX_REGISTERED_CUSTODIES
  | typeof ADRENA_ERROR__MAX_REGISTERED_POOL
  | typeof ADRENA_ERROR__MAX_REGISTERED_RESOLVED_STAKING_ROUND_REACHED
  | typeof ADRENA_ERROR__MAX_UTILIZATION
  | typeof ADRENA_ERROR__MIN_LEVERAGE
  | typeof ADRENA_ERROR__MISSING_CLOSE_POSITION_PRICE
  | typeof ADRENA_ERROR__MISSING_ORACLE_PRICE
  | typeof ADRENA_ERROR__MISSING_OR_INVALID_REFERRER_ACCOUNT
  | typeof ADRENA_ERROR__PERMISSIONLESS_ORACLE_MALFORMED_ED25519_DATA
  | typeof ADRENA_ERROR__PERMISSIONLESS_ORACLE_MESSAGE_MISMATCH
  | typeof ADRENA_ERROR__PERMISSIONLESS_ORACLE_MISSING_SIGNATURE
  | typeof ADRENA_ERROR__PERMISSIONLESS_ORACLE_SIGNER_MISMATCH
  | typeof ADRENA_ERROR__POOL_AUM_SOFT_CAP_USD_REACHED
  | typeof ADRENA_ERROR__POSITION_ALREADY_CLOSED
  | typeof ADRENA_ERROR__POSITION_AMOUNT_LIMIT
  | typeof ADRENA_ERROR__POSITION_NOT_IN_LIQUIDATION_RANGE
  | typeof ADRENA_ERROR__POSITION_TOO_YOUNG
  | typeof ADRENA_ERROR__PROFILE_PICTURE_NOT_UNLOCKED
  | typeof ADRENA_ERROR__PYTH_PRICE_EXPONENT_TOO_LARGE_INCURRING_PRECISION_LOSS
  | typeof ADRENA_ERROR__STAKE_NOT_ESTABLISHED
  | typeof ADRENA_ERROR__STALE_ORACLE_PRICE
  | typeof ADRENA_ERROR__TEAM_IMMUTABLE
  | typeof ADRENA_ERROR__TITLE_NOT_UNLOCKED
  | typeof ADRENA_ERROR__TOKEN_RATIO_OUT_OF_RANGE
  | typeof ADRENA_ERROR__UNRESOLVED_STAKE
  | typeof ADRENA_ERROR__UNSUPPORTED_ORACLE
  | typeof ADRENA_ERROR__UNSUPPORTED_TOKEN
  | typeof ADRENA_ERROR__USER_NICKNAME_INVALID_FORMAT
  | typeof ADRENA_ERROR__USER_NICKNAME_TOO_LONG
  | typeof ADRENA_ERROR__USER_NICKNAME_TOO_SHORT
  | typeof ADRENA_ERROR__USER_STAKE_NOT_FOUND
  | typeof ADRENA_ERROR__WALLPAPER_NOT_UNLOCKED;

let adrenaErrorMessages: Record<AdrenaError, string> | undefined;
if (process.env.NODE_ENV !== 'production') {
  adrenaErrorMessages = {
    [ADRENA_ERROR__BUCKET_MINT_LIMIT]: `Reached bucket mint limit`,
    [ADRENA_ERROR__CUSTODY_AMOUNT_LIMIT]: `Custody amount limit exceeded`,
    [ADRENA_ERROR__CUSTODY_NOT_FOUND]: `Cannot find custody`,
    [ADRENA_ERROR__CUSTODY_STABLE_LOCKED_AMOUNT_NOT_FOUND]: `Cannot find custody stable locked amount`,
    [ADRENA_ERROR__GENESIS_ALP_LIMIT_REACHED]: `Genesis ALP add liquidity limit reached`,
    [ADRENA_ERROR__GENESIS_LOCK_CAMPAIGN_FULLY_SUBSCRIBED]: `The campaign is fully subscribed`,
    [ADRENA_ERROR__INDEX_OUT_OF_BOUNDS]: `Requested index is out of bounds`,
    [ADRENA_ERROR__INSTRUCTION_NOT_ALLOWED]: `Instruction is not allowed at this time`,
    [ADRENA_ERROR__INSUFFICIENT_AMOUNT_RETURNED]: `Insufficient token amount returned`,
    [ADRENA_ERROR__INSUFFICIENT_BUCKET_RESERVE]: `The bucket does not contain enough token for reserving this allocation`,
    [ADRENA_ERROR__INSUFFICIENT_COLLATERAL]: `The minimum amount of collateral posted to open a position is not met`,
    [ADRENA_ERROR__INVALID_ACCOUNT_DATA]: `Invalid account data`,
    [ADRENA_ERROR__INVALID_ACHIEVEMENT]: `Invalid achievement ID`,
    [ADRENA_ERROR__INVALID_ADRENA_CONFIG]: `Invalid adrena config`,
    [ADRENA_ERROR__INVALID_BUCKET_NAME]: `Invalid bucket name`,
    [ADRENA_ERROR__INVALID_CALLER]: `The instruction must be call with a specific account as caller`,
    [ADRENA_ERROR__INVALID_COLLATERAL_CUSTODY]: `Invalid collateral custody`,
    [ADRENA_ERROR__INVALID_CONTINENT_OR_TEAM]: `Continent or Team is invalid`,
    [ADRENA_ERROR__INVALID_CORTEX_STATE]: `Invalid cortex state`,
    [ADRENA_ERROR__INVALID_CUSTODY]: `Invalid custody`,
    [ADRENA_ERROR__INVALID_CUSTODY_ACCOUNT]: `Invalid custody account`,
    [ADRENA_ERROR__INVALID_CUSTODY_CONFIG]: `Invalid custody config`,
    [ADRENA_ERROR__INVALID_CUSTODY_STATE]: `Invalid custody state`,
    [ADRENA_ERROR__INVALID_ENVIRONMENT]: `Instruction is not allowed in production`,
    [ADRENA_ERROR__INVALID_GENESIS_LOCK_STATE]: `Invalid genesis lock state`,
    [ADRENA_ERROR__INVALID_GOVERNANCE_PROGRAM]: `Governance program do not match Cortex's one`,
    [ADRENA_ERROR__INVALID_GOVERNANCE_REALM]: `Governance realm do not match Cortex's one`,
    [ADRENA_ERROR__INVALID_LIMIT_ORDER_STATE]: `Invalid limit order state`,
    [ADRENA_ERROR__INVALID_LOCK_DURATION]: `The provided lock duration isn't valid`,
    [ADRENA_ERROR__INVALID_ORACLE_ACCOUNT]: `Invalid oracle account`,
    [ADRENA_ERROR__INVALID_ORACLE_PRICE]: `Invalid oracle price`,
    [ADRENA_ERROR__INVALID_ORACLE_SIGNATURE]: `Invalid oracle signature`,
    [ADRENA_ERROR__INVALID_ORACLE_STATE]: `Invalid oracle state`,
    [ADRENA_ERROR__INVALID_POOL_CONFIG]: `Invalid pool config`,
    [ADRENA_ERROR__INVALID_POOL_LIQUIDITY_STATE]: `Invalid pool liquidity state`,
    [ADRENA_ERROR__INVALID_POOL_STATE]: `Invalid pool state`,
    [ADRENA_ERROR__INVALID_POSITION_STATE]: `Invalid position state`,
    [ADRENA_ERROR__INVALID_SIGNER]: `Invalid signer`,
    [ADRENA_ERROR__INVALID_STAKE_STATE]: `Invalid stake state`,
    [ADRENA_ERROR__INVALID_STAKING_LOCKING_TIME]: `Invalid staking locking time`,
    [ADRENA_ERROR__INVALID_STAKING_ROUND_STATE]: `Invalid staking round state`,
    [ADRENA_ERROR__INVALID_STAKING_STATE]: `Invalid staking state`,
    [ADRENA_ERROR__INVALID_THREAD_ID]: `(deprecated)The provided Sablier thread does not have the expected ID`,
    [ADRENA_ERROR__INVALID_VERSION]: `Invalid version`,
    [ADRENA_ERROR__INVALID_VESTING_UNLOCK_TIME]: `Vesting unlock time is too close or passed`,
    [ADRENA_ERROR__INVALID_VEST_STATE]: `Invalid vest state`,
    [ADRENA_ERROR__INVALID_VEST_VERSION]: `Invalid vest version`,
    [ADRENA_ERROR__INVALID_VOTE_MULTIPLIER]: `Invalid vote multiplier`,
    [ADRENA_ERROR__INVALID_WALLPAPER_OR_PROFILE_PICTURE_OR_TITLE]: `Wallpaper or Profile Picture or Title is invalid`,
    [ADRENA_ERROR__LOCKED_STAKE_ARRAY_FULL]: `The max number of LockedStaking has been reached`,
    [ADRENA_ERROR__MATH_OVERFLOW]: `Overflow in arithmetic operation`,
    [ADRENA_ERROR__MAX_CUMULATIVE_SHORT_POSITION_SIZE_LIMIT]: `The short limit for this asset has been reached`,
    [ADRENA_ERROR__MAX_LEVERAGE]: `Position leverage limit exceeded`,
    [ADRENA_ERROR__MAX_PRICE_SLIPPAGE]: `Price slippage limit exceeded`,
    [ADRENA_ERROR__MAX_REGISTERED_CUSTODIES]: `The number of registered custody reached max amount`,
    [ADRENA_ERROR__MAX_REGISTERED_POOL]: `The number of registered pool reached max amount`,
    [ADRENA_ERROR__MAX_REGISTERED_RESOLVED_STAKING_ROUND_REACHED]: `Max registered resolved staking round reached`,
    [ADRENA_ERROR__MAX_UTILIZATION]: `Token utilization limit exceeded`,
    [ADRENA_ERROR__MIN_LEVERAGE]: `Position leverage under minimum`,
    [ADRENA_ERROR__MISSING_CLOSE_POSITION_PRICE]: `The close position price is mandatory`,
    [ADRENA_ERROR__MISSING_ORACLE_PRICE]: `Missing at least one oracle price`,
    [ADRENA_ERROR__MISSING_OR_INVALID_REFERRER_ACCOUNT]: `Missing or invalid referrer account`,
    [ADRENA_ERROR__PERMISSIONLESS_ORACLE_MALFORMED_ED25519_DATA]: `Ed25519 signature verification data does not match expected format`,
    [ADRENA_ERROR__PERMISSIONLESS_ORACLE_MESSAGE_MISMATCH]: `Signed message does not match instruction params`,
    [ADRENA_ERROR__PERMISSIONLESS_ORACLE_MISSING_SIGNATURE]: `Permissionless oracle update must be preceded by Ed25519 signature verification instruction`,
    [ADRENA_ERROR__PERMISSIONLESS_ORACLE_SIGNER_MISMATCH]: `Ed25519 signature was not signed by the oracle authority`,
    [ADRENA_ERROR__POOL_AUM_SOFT_CAP_USD_REACHED]: `The pool is fully subscribed`,
    [ADRENA_ERROR__POSITION_ALREADY_CLOSED]: `The position is already pending cleanup and close`,
    [ADRENA_ERROR__POSITION_AMOUNT_LIMIT]: `Position amount limit exceeded`,
    [ADRENA_ERROR__POSITION_NOT_IN_LIQUIDATION_RANGE]: `The position is not in liquidation range`,
    [ADRENA_ERROR__POSITION_TOO_YOUNG]: `A position cannot be close right after open, a slight delay is enforced`,
    [ADRENA_ERROR__PROFILE_PICTURE_NOT_UNLOCKED]: `The requested profile picture has not been unlocked by this user`,
    [ADRENA_ERROR__PYTH_PRICE_EXPONENT_TOO_LARGE_INCURRING_PRECISION_LOSS]: `The exponent used for pyth price lead to high precision loss`,
    [ADRENA_ERROR__STAKE_NOT_ESTABLISHED]: `The stake isn't established yet`,
    [ADRENA_ERROR__STALE_ORACLE_PRICE]: `Stale oracle price`,
    [ADRENA_ERROR__TEAM_IMMUTABLE]: `The team can not be changed after being already set`,
    [ADRENA_ERROR__TITLE_NOT_UNLOCKED]: `The requested title has not been unlocked by this user`,
    [ADRENA_ERROR__TOKEN_RATIO_OUT_OF_RANGE]: `Token ratio out of range`,
    [ADRENA_ERROR__UNRESOLVED_STAKE]: `Stake is not resolved`,
    [ADRENA_ERROR__UNSUPPORTED_ORACLE]: `Unsupported price oracle`,
    [ADRENA_ERROR__UNSUPPORTED_TOKEN]: `Token is not supported`,
    [ADRENA_ERROR__USER_NICKNAME_INVALID_FORMAT]: `User nickname expected format: Monster followed by digits`,
    [ADRENA_ERROR__USER_NICKNAME_TOO_LONG]: `User nickname exceed 24 characters`,
    [ADRENA_ERROR__USER_NICKNAME_TOO_SHORT]: `User nickname is less than 3 characters`,
    [ADRENA_ERROR__USER_STAKE_NOT_FOUND]: `The user stake account specified could not be found`,
    [ADRENA_ERROR__WALLPAPER_NOT_UNLOCKED]: `The requested wallpaper has not been unlocked by this user`,
  };
}

export function getAdrenaErrorMessage(code: AdrenaError): string {
  if (process.env.NODE_ENV !== 'production') {
    return (adrenaErrorMessages as Record<AdrenaError, string>)[code];
  }

  return 'Error message not available in production bundles.';
}

export function isAdrenaError<TProgramErrorCode extends AdrenaError>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    ADRENA_PROGRAM_ADDRESS,
    code
  );
}
